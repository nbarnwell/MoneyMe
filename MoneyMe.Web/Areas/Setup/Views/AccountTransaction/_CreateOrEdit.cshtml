@model MoneyMe.Web.Models.Scaffolding.AccountTransaction

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="editor-label">
    @Html.LabelFor(model => model.TransactionDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.TransactionDate)
    @Html.ValidationMessageFor(model => model.TransactionDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.ReceiptDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.ReceiptDate)
    @Html.ValidationMessageFor(model => model.ReceiptDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.RecordedDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.RecordedDate)
    @Html.ValidationMessageFor(model => model.RecordedDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.AccountTransactionStatusId)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.AccountTransactionStatusId)
    @Html.ValidationMessageFor(model => model.AccountTransactionStatusId)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Amount)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Amount)
    @Html.ValidationMessageFor(model => model.Amount)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Payee)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Payee)
    @Html.ValidationMessageFor(model => model.Payee)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Description)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Description)
    @Html.ValidationMessageFor(model => model.Description)
</div>

<div class="editor-label">
    AccountStatement
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.AccountStatementId, ((IEnumerable<MoneyMe.Web.Models.Scaffolding.AccountStatement>)ViewBag.PossibleAccountStatements).Select(option => new SelectListItem {
        Text = Html.DisplayTextFor(_ => option).ToString(), 
        Value = option.Id.ToString(),
        Selected = (Model != null) && (option.Id == Model.AccountStatementId)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.AccountStatementId)
</div>
<div class="editor-label">
    AccountTransactionType
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.AccountTransactionTypeId, ((IEnumerable<MoneyMe.Web.Models.Scaffolding.AccountTransactionType>)ViewBag.PossibleAccountTransactionTypes).Select(option => new SelectListItem {
        Text = (option == null ? "None" : option.Name), 
        Value = option.Id.ToString(),
        Selected = (Model != null) && (option.Id == Model.AccountTransactionTypeId)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.AccountTransactionTypeId)
</div>
